@page "/login"
@page "/"
@using DTOs
@using API.Clients
@using System.ComponentModel.DataAnnotations
@using Microsoft.JSInterop
@using BlazorApp.Client
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@inject AuthStateProvider authStateProvider
@rendermode InteractiveWebAssembly

<PageTitle>Iniciar Sesión</PageTitle>
<h3>Iniciar Sesión</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="loginForm">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="email" class="form-label">Email:</label>
        <InputText id="email" type="email" class="form-control" @bind-Value="loginModel.Email" />
        <ValidationMessage For="() => loginModel.Email" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Contraseña:</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
        <ValidationMessage For="() => loginModel.Password" />
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }

    <button type="submit" class="btn btn-primary">Ingresar</button>
    <a href="/usuarios/agregar" class="btn btn-link">Registrarse</a>

</EditForm>


@code {
    private LoginRequestDTO loginModel = new LoginRequestDTO();
    private string? errorMessage;

    
    protected override void OnInitialized()
    {
        if (authStateProvider.CurrentUser != null)
        {
            navigationManager.NavigateTo("/dashboard");
        }
    }

    private async Task HandleLogin()
    {
        errorMessage = null;
        try
        {
            var user = await AuthApiClient.LoginAsync(loginModel);

            if (user != null)
            {
                await authStateProvider.Login(user);

             
                navigationManager.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "Usuario o contraseña incorrectos.";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error en login: {ex.Message}");
            errorMessage = "Ocurrió un error al intentar iniciar sesión. Intente más tarde.";
        }
    }
}

